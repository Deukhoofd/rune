name: Release

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      channel:
        description: 'release to perform'
        required: true
        default: 'nightly'
        type: choice
        options:
        - nightly
        - release
      skip_tests:
        description: 'skip tests'
        required: true
        default: false
        type: boolean
  push:
    branches:
      - release

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
    - run: echo "tag=$(date --iso -u)" >> $GITHUB_OUTPUT
      if: ${{github.ref == 'refs/heads/release' || github.event.inputs.channel == 'release'}}
    - run: echo "tag=nightly" >> $GITHUB_OUTPUT
      if: ${{github.event_name == 'schedule'}}
    - run: echo "tag=${{github.event.inputs.channel}}" >> $GITHUB_OUTPUT
      if: ${{github.event.inputs.channel != ''}}

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
      if: ${{!github.event.inputs.skip_tests}}
    - run: cargo test --workspace --all-targets
      if: ${{!github.event.inputs.skip_tests}}
    - run: cargo test --workspace --doc
      if: ${{!github.event.inputs.skip_tests}}
    - run: cargo run --bin rune -- check --recursive --experimental scripts
      if: ${{!github.event.inputs.skip_tests}}
    - run: cargo run --bin rune -- test --recursive --experimental scripts
      if: ${{!github.event.inputs.skip_tests}}

  build:
    needs: [tag, test]
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
    - run: 'echo "tag: ${{needs.tag.outputs.tag}}"'
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - run: cargo run -p builder -- --channel ${{needs.tag.outputs.tag}}
    - uses: actions/upload-artifact@v1
      with:
        name: dist-${{matrix.os}}
        path: dist

  publish:
    needs: [tag, build]
    runs-on: ubuntu-latest
    steps:
    - run: 'echo "tag: ${{needs.tag.outputs.tag}}"'
    - uses: actions/download-artifact@v1
      with: {name: dist-macos-latest, path: dist}
    - uses: actions/download-artifact@v1
      with: {name: dist-windows-latest, path: dist}
    - uses: actions/download-artifact@v1
      with: {name: dist-ubuntu-latest, path: dist}
    - name: Publish Release
      uses: ./.github/actions/github-release
      with:
        files: "dist/*"
        name: ${{needs.tag.outputs.tag}}
        token: ${{secrets.GITHUB_TOKEN}}
